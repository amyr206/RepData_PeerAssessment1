source('~/r_programming/GCDcourseproject/run_analysis.R')
source('~/r_programming/run_analysis.R')
rawactivities <- read.table(".\\UCI HAR Dataset\\activity_labels.txt")
str(rawactivities)
source('~/r_programming/run_analysis.R')
source('~/r_programming/run_analysis.R', echo=TRUE)
source('~/r_programming/run_analysis.R')
source('~/r_programming/run_analysis.R')
source('~/r_programming/gettingcleaningdata/getting-and-cleaning-data/run_analysis.R')
download.file("https://s3.amazonaws.com/coursera-uploads/user-8094b3358555693b7600c800/973497/asst-3/ff91fad0a4f411e49b76bb208004303e.txt" mode="wb")
download.file("https://s3.amazonaws.com/coursera-uploads/user-8094b3358555693b7600c800/973497/asst-3/ff91fad0a4f411e49b76bb208004303e.txt", mode="wb")
download.file("https://s3.amazonaws.com/coursera-uploads/user-8094b3358555693b7600c800/973497/asst-3/ff91fad0a4f411e49b76bb208004303e.txt", "assessment1.txt" mode="wb")
download.file("https://s3.amazonaws.com/coursera-uploads/user-8094b3358555693b7600c800/973497/asst-3/ff91fad0a4f411e49b76bb208004303e.txt", "assessment1.txt", mode="wb")
assessment1 <- read.table("assessment1.txt")
str(assessment1)
head(assessment1)
run.analysis()
source('~/r_programming/assessment1-evaluationonly.R')
download.file("https://s3.amazonaws.com/coursera-uploads/user-0c076648febe82e204d72245/973497/asst-3/1a15fc10a44311e4b253fb5bdf53d8b6.txt", "assessment2.txt", mode = "wb")
assessment2 <- read.table("assessment2.txt")
str(assessment2)
assessment2[5, 5]
head(assessment2, 5)
colnames(assessment2)
download.file("https://s3.amazonaws.com/coursera-uploads/user-594e6571dd69ae6679b0c192/973497/asst-3/7b049820a43811e4b90e61b02f61a058.txt", "assessment2.txt", mode = "wb")
assessment3 <- read.table("assessment2.txt")
str(assessment3)
head(assessment3)
assessment3 <- read.table("assessment2.txt", sep =",")
str(assessment3)
lookatmyownwork <- read.table("tidydata.txt")
str(lookatmyownwork)
str(lookatmyowndata)
lookatmyowndata <- read.table("tidydata.txt")
str(lookatmyowndata)
head(lookatmyowndata)
lookatmyowndata <- read.table("tidydata.txt", header = TRUE)
str(lookatmyowndata)
download.file("https://s3.amazonaws.com/coursera-uploads/user-8094b3358555693b7600c800/973497/asst-3/ff91fad0a4f411e49b76bb208004303e.txt", "assessment1.txt", mode="wb")
assessment1 <- read.table("assessment1.txt")
head(assessment1)
assessment1 <- read.table("assessment1.txt", sep = "\t")
head(assessment1)
assessment1 <- read.table("assessment1.txt", header = TRUE, sep = "\t")
str(assessment1)
assessment1 <- read.delim("assessment1.txt")
str(assessment1)
assessment1 <- read.delim2("assessment1.txt")
str(assessment1)
download.file("https://s3.amazonaws.com/coursera-uploads/user-594e6571dd69ae6679b0c192/973497/asst-3/7b049820a43811e4b90e61b02f61a058.txt", "assessment3.txt", mode = "wb")
assessment3 <- read.table("assessment3.txt")
str(assessment3)
assessment1 <- read.table("assessment1.txt", header = TRUE, sep = "\t", skip = 5)
assessment1 <- read.table("assessment1.txt", header = TRUE, sep = "\t")
assessment3 <- read.table("assessment3.txt", sep=",")
str(assessment3)
assessment3 <- read.table("assessment3.txt", sep=",", header = TRUE)
str(assessment3)
download.file("https://s3.amazonaws.com/coursera-uploads/user-d299b86ad8507affdb516b52/973497/asst-3/64a83580a40311e4ae0713339aa3d962.txt", "assessment4.txt", mode = "wb")
assessment4 <- read.table("assessment4.txt")
str(assessment4)
assessment4 <- read.table("assessment4.txt", header = TRUE)
str(assessment4)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "quiz4q1.csv", mode = "wb")
q1data <- read.csv("quiz4q1.csv")
str(q1data)
head(q1data)
splitNames <- strsplit(names(q1data), "wgtp")
splitNames[[123]]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "quiz4q2.csv", mode = "wb")
q2data <- read.csv("quiz4q2.csv")
str(q2data)
tail(q1data)
head(q2data)
tail(q2data)
tail(q2data, 20)
tail(q2data, 30)
q2data[250, ]
q2data[200, ]
q2data[180, ]
q2data[200:210]
q2data[200:210, ]
q2data[210:220, ]
q2data[220:230, ]
q2datacleaned <- q2data[5:219, c(1, 2, 4, 5)]
head(q2datacleaned)
tail(q2datacleaned)
tail(q2datacleaned, 10)
tail(q2datacleaned, 20)
tail(q2datacleaned, 30)
q2datacleaned <- q2datacleaned(1:194, )
q2datacleaned <- q2datacleaned[1:194, ]
head(q2datacleaned)
tail(q2datacleaned)
q2datacleaned <- q2datacleaned[1:190, ]
tail(q2datacleaned)
head(q2datacleaned)
names(q2datacleaned) <- c("code", "rank", "name", "gdp")
str(q2datacleaned)
q2datacleaned <- as.data.frame(q2datacleaned, row.names = FALSE)
q2datacleaned <- data.frame(q2datacleaned, row.names = FALSE)
q2datacleaned <- data.frame(q2datacleaned, row.names = NULL)
head(q2datacleaned)
q2datalcleaned <- gsub(",", "", q2datacleaned$gdp)
head(q2datacleaned)
q2datalcleaned$gdp <- gsub(",", "", q2datacleaned$gdp)
head(q2datacleaned)
q2datacleaned$gdp <- gsub(",", "", q2datacleaned$gdp)
head(q2datacleaned)
str(q2datacleaned)
class(q2datacleaned$gdp) <- "integer"
str(q2datacleaned)
mean(q2datacleaned$gdp)
grep("*United",q2datacleaned$name)
grep("United$",q2datacleaned$name)
grep("^United",q2datacleaned$name)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "quiz4q4.csv", mode = "wb")
q4data <- read.csv("quiz4q4.csv")
str(q4data)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv","quiz4q4.csv", mode = "wb")
q4data <- read.csv("quiz4q4.csv")
str(q4data)
q4data$Special.Notes[1:10]
q4data$Special.Notes[10:20]
q4data$Special.Notes[20:30]
q4data$Special.Notes[30:40]
data4.1 <- q2datacleaned
tail(q4data)
data4.2 <- q4data[, c("CountryCode", "Special.Notes")]
str(data4.2)
grep("*June*", data4.2$Special.Notes, values = TRUE)
grep("*June*", data4.2$Special.Notes, value = TRUE)
grep("Fiscal year end: June 30;", data4.2$Special.Notes, value = TRUE)
merged4 <- merge(data4.1, data4.2, by.x = "code", by.y = "CountryCode")
str(merged4)
grep("Fiscal year end: June 30;", merged4$Special.Notes, value = TRUE)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
str(sampleTimes)
library(lubridate)
dates2012 <- Date[Year(Date) = "2012"]
dates2012 <- Year(Date) = "2012"
dates2012 <- sampleTimes[Year(sampleTimes) = 2012]
dates2012 <- sampleTimes[Year(sampleTimes)]
year(sampleTimes)
year(sampleTimes) = 2012
sampleTimes = index(amzn)
str(sampleTimes)
years <- year(sampleTimes)
years[2012]
years["2012"]
years
years[years=2012]
years[years="2012"]
years <- subset(sampleTimes, year(sampleTimes) = 2012)
years <- subset(sampleTimes, year(sampleTimes) == 2012)
years
length(years)
wday(years[2])
years <- subset(sampleTimes, year(sampleTimes) == 2012)
length(years)
wday(years, label = TRUE)
mondays <- subset(years, wday(years) == Mon)
mondays <- subset(years, wday(years) == 2)
length(mondays)
install.packages(c("devtools", "dplyr", "Formula", "manipulate", "plotrix", "Rcpp", "XLConnect"))
library('lattice')
class(xyplot())
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library("ggplot2")
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
source('~/r_programming/exploratorydataanalysis/project2/plot1.R')
install.packages(c("colorspace", "Hmisc", "KernSmooth", "manipulate", "quantmod", "Rcpp", "XLConnect"))
library(dplyr)
library(lubridate)
avgalldailysteps <- dailystepsimputed %>%
bind_rows(dailystepscompletecases) %>%
mutate(daytype = ifelse(wday(date) >= 2 & wday(date) <= 6, "weekday", "weekend")) %>%
group_by(date) %>%
summarize(avgsteps = avg(steps))
avgalldailysteps <- dailystepsimputed %>%
bind_rows(dailystepscompletecases) %>%
mutate(daytype = ifelse(wday(date) >= 2 & wday(date) <= 6, "weekday", "weekend")) %>%
group_by(date) %>%
summarize(avgsteps = avg(steps))
## Are there differences in activity patterns between weekdays and weekends?
source('~/.active-rstudio-document', echo=TRUE)
getwd()
setwd("C:/Users/Amy Richards/Documents/r_programming/reproresearch/project1/RepData_PeerAssessment1")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(avgalldailysteps)
source('~/.active-rstudio-document', echo=TRUE)
View(avgalldailysteps)
View(avgalldailysteps)
source('~/.active-rstudio-document', echo=TRUE)
View(avgalldailysteps)
View(avgalldailysteps)
avgalldailysteps <- dailystepsimputed %>%
bind_rows(dailystepscompletecases) %>%
mutate(daytype = ifelse(wday(date) >= 2 & wday(date) <= 6, "weekday", "weekend")) %>%
mutate(intervalstoplot = ymd_hms(paste(today(), str_pad(interval, 4, pad = 0), "00"))) %>%
group_by(intervalstoplot, daytype) %>%
summarize(avgsteps = mean(steps))
View(avgalldailysteps)
library("lattice")
xyplot(avgalldailysteps, daytype ~ avgsteps)
with(avgalldailysteps {
xyplot(avgsteps ~ intervalstoplot | daytype)
})
with(avgalldailysteps, {
xyplot(avgsteps ~ intervalstoplot | daytype)
})
with(avgalldailysteps, {
xyplot(avgsteps ~ intervalstoplot | daytype, type = "l")
})
with(avgalldailysteps, {
xyplot(avgsteps ~ intervalstoplot | daytype,
type = "l",
layout = c(1,2))
})
source('~/.active-rstudio-document', echo=TRUE)
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
scales = list(
x = list(
format = "%H:%M")
)
)
View(avgalldailysteps)
View(avgalldailysteps)
View(avgalldailysteps)
head(avgalldailysteps)
tail(avgalldailysteps)
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
scales = list(
x = list(
format = "%H:%M %p")
)
)
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
scales = list(
x = list(
format = "%R")
)
)
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
scales = list(
x = list(
format = "%X")
)
)
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
scales = list(
x = list(
format = "%k")
)
)
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
scales = list(
x = list(
format = "%H:M")
)
)
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
scales = list(
x = list(
format(avgalldailysteps$daytype, format = "%H:%M")
)
)
)
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
xlim = c(min(intervalstoplot), max(intervalstoplot))
#scales = list(
#        x = list(
#                format = "%H:%M")
#        )
# )
)
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
scales = list(
x = list(
format = "hour(intervalstoplot):minute(intervalstoplot)")
)
)
)
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
scales = list(
x = list(
format = hour(intervalstoplot):minute(intervalstoplot))
)
)
)
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
scales = list(
x = list(
format = hour(avgalldailysteps$intervalstoplot):minute(avgalldailysteps$intervalstoplot))
)
)
)
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
scales = list(
x = list(
format = hour(avgalldailysteps$intervalstoplot):minute(avgalldailysteps$intervalstoplot)
)
)
)
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
xlim = seq(ymd_hms(paste(today(), 00:00:00)),
ymd_hms(paste(today(), 23:55:00)))
)
limits = as.numeric(c(paste(today(), 00:00:00), paste(today(), 23:55:00)))
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
xlim = limits)
)
limits = as.numeric(c(paste(today(), 00:00:00), paste(today(), 23:55:00)))
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
xlim = limits)
limits = as.POSIXct(c(paste(today(), 00:00:00), paste(today(), 23:55:00)))
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
xlim = limits)
limits = ymd_hms(c(paste(today(), "00:00:00""), paste(today(), "23:55:00"")))
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
xlim = limits)
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps")
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
xlim = c(ymd_hms(paste(today(), "00:00:00"), ymd_hms(paste(today(), "00:23:55"))
)
)
)
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
xlim = c(0, ymd_hms(paste(today(), "00:23:55"))
)
)
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps")
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
scales= list( relation ="free"))
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
scales = list(relation = "free", format = "%H:%M")
)
xyplot(avgsteps ~ intervalstoplot | daytype,
data = avgalldailysteps,
type = "l",
layout = c(1,2),
main = "Weekend and weekday activity levels",
xlab = "Intervals",
ylab = "Average steps",
scales = list(relation = "free", format = "%H:%M"))
library(knitr)
knit2html("PA1_template.Rmd")
